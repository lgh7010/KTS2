TRUNCATE TABLE TEST_REL_TESTCASE;
INSERT  INTO `TEST_REL_TESTCASE`(`RELATION_SEQ`,`TEST_SEQ`,`LIST_INDEX`,`TESTCASE_SEQ`,`DELETED`) VALUES
(1,1,1,1,'N'),
(2,1,2,2,'N'),
(3,1,3,3,'N'),
(4,1,4,3,'N'),
(5,1,5,3,'N'),
(6,1,6,4,'N'),
(7,2,1,3,'N'),
(8,2,2,2,'N'),
(9,2,3,1,'N'),
(10,3,1,2,'N'),
(11,3,2,3,'N'),
(12,3,3,2,'N');

-- step 1. 해당 테스트케이스와 연관된 모든 관계 삭제
-- DELETE FROM TEST_REL_TESTCASE WHERE TESTCASE_SEQ = 2;
UPDATE TEST_REL_TESTCASE SET DELETED = 'Y' WHERE TESTCASE_SEQ = 2;

-- step 2. 관계 테이블 업데이트
SET @rownum:=0;
UPDATE TEST_REL_TESTCASE a INNER JOIN (SELECT res.RELATION_SEQ, res.TEST_SEQ, res.rNum AS LIST_INDEX, res.TESTCASE_SEQ FROM (
	SELECT(CASE @val WHEN t1.TEST_SEQ THEN @rownum:=@rownum+1 ELSE @rownum:=1 END) AS rNum, (@val:=t1.TEST_SEQ) temp, t1.*
	FROM TEST_REL_TESTCASE t1
	WHERE t1.DELETED = 'N'
	ORDER BY t1.TEST_SEQ, t1.LIST_INDEX
) res) b ON a.RELATION_SEQ = b.RELATION_SEQ
SET a.LIST_INDEX = b.LIST_INDEX;

-- 결과 확인
SELECT * FROM TEST_REL_TESTCASE ORDER BY TEST_SEQ, LIST_INDEX;
SELECT * FROM TEST_REL_TESTCASE WHERE DELETED = 'N' ORDER BY TEST_SEQ, LIST_INDEX;









-- 2번 테스트케이스를 다시 살리는 경우 (step 2 작업을 그대로 다시 한번 해주면 된다. 쿼리 똑같다)
UPDATE TEST_REL_TESTCASE SET DELETED = 'N' WHERE TESTCASE_SEQ = 2;

SET @rownum:=0;
UPDATE TEST_REL_TESTCASE a INNER JOIN (SELECT res.RELATION_SEQ, res.TEST_SEQ, res.rNum AS LIST_INDEX, res.TESTCASE_SEQ FROM (
	SELECT(CASE @val WHEN t1.TEST_SEQ THEN @rownum:=@rownum+1 ELSE @rownum:=1 END) AS rNum, (@val:=t1.TEST_SEQ) temp, t1.*
	FROM TEST_REL_TESTCASE t1
	WHERE t1.DELETED = 'N'
	ORDER BY t1.TEST_SEQ, t1.LIST_INDEX
) res) b ON a.RELATION_SEQ = b.RELATION_SEQ
SET a.LIST_INDEX = b.LIST_INDEX;

-- 결과 확인
SELECT * FROM TEST_REL_TESTCASE ORDER BY TEST_SEQ, LIST_INDEX;
SELECT * FROM TEST_REL_TESTCASE WHERE DELETED = 'N' ORDER BY TEST_SEQ, LIST_INDEX;